#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBanDienThoai
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BanDienThoai")]
	public partial class csdlbdtDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDanhMuc1(DanhMuc1 instance);
    partial void UpdateDanhMuc1(DanhMuc1 instance);
    partial void DeleteDanhMuc1(DanhMuc1 instance);
    partial void InsertDatHang(DatHang instance);
    partial void UpdateDatHang(DatHang instance);
    partial void DeleteDatHang(DatHang instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertThuongHieu(ThuongHieu instance);
    partial void UpdateThuongHieu(ThuongHieu instance);
    partial void DeleteThuongHieu(ThuongHieu instance);
    partial void InsertTinTuc(TinTuc instance);
    partial void UpdateTinTuc(TinTuc instance);
    partial void DeleteTinTuc(TinTuc instance);
    #endregion
		
		public csdlbdtDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BanDienThoaiConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public csdlbdtDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public csdlbdtDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public csdlbdtDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public csdlbdtDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DanhMuc1> DanhMuc1s
		{
			get
			{
				return this.GetTable<DanhMuc1>();
			}
		}
		
		public System.Data.Linq.Table<DatHang> DatHangs
		{
			get
			{
				return this.GetTable<DatHang>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<ThuongHieu> ThuongHieus
		{
			get
			{
				return this.GetTable<ThuongHieu>();
			}
		}
		
		public System.Data.Linq.Table<TinTuc> TinTucs
		{
			get
			{
				return this.GetTable<TinTuc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc1")]
	public partial class DanhMuc1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DANHMUC;
		
		private string _TEN_DANHMUC;
		
		private System.Nullable<int> _HIENTHI;
		
		private System.Nullable<int> _VITRI;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DANHMUCChanging(int value);
    partial void OnID_DANHMUCChanged();
    partial void OnTEN_DANHMUCChanging(string value);
    partial void OnTEN_DANHMUCChanged();
    partial void OnHIENTHIChanging(System.Nullable<int> value);
    partial void OnHIENTHIChanged();
    partial void OnVITRIChanging(System.Nullable<int> value);
    partial void OnVITRIChanged();
    #endregion
		
		public DanhMuc1()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DANHMUC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DANHMUC
		{
			get
			{
				return this._ID_DANHMUC;
			}
			set
			{
				if ((this._ID_DANHMUC != value))
				{
					this.OnID_DANHMUCChanging(value);
					this.SendPropertyChanging();
					this._ID_DANHMUC = value;
					this.SendPropertyChanged("ID_DANHMUC");
					this.OnID_DANHMUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_DANHMUC", DbType="NVarChar(MAX)")]
		public string TEN_DANHMUC
		{
			get
			{
				return this._TEN_DANHMUC;
			}
			set
			{
				if ((this._TEN_DANHMUC != value))
				{
					this.OnTEN_DANHMUCChanging(value);
					this.SendPropertyChanging();
					this._TEN_DANHMUC = value;
					this.SendPropertyChanged("TEN_DANHMUC");
					this.OnTEN_DANHMUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIENTHI", DbType="Int")]
		public System.Nullable<int> HIENTHI
		{
			get
			{
				return this._HIENTHI;
			}
			set
			{
				if ((this._HIENTHI != value))
				{
					this.OnHIENTHIChanging(value);
					this.SendPropertyChanging();
					this._HIENTHI = value;
					this.SendPropertyChanged("HIENTHI");
					this.OnHIENTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VITRI", DbType="Int")]
		public System.Nullable<int> VITRI
		{
			get
			{
				return this._VITRI;
			}
			set
			{
				if ((this._VITRI != value))
				{
					this.OnVITRIChanging(value);
					this.SendPropertyChanging();
					this._VITRI = value;
					this.SendPropertyChanged("VITRI");
					this.OnVITRIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc1_SanPham", Storage="_SanPhams", ThisKey="ID_DANHMUC", OtherKey="ID_DANHMUC")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc1 = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatHang")]
	public partial class DatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_DONHANG;
		
		private string _TONG_GIA_TRI;
		
		private string _SOLUONG;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private System.Nullable<System.DateTime> _NGAY_TAO;
		
		private System.Data.Linq.Binary _DIACHI_GIAOHANG;
		
		private long _ID_SANPHAM;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DONHANGChanging(long value);
    partial void OnID_DONHANGChanged();
    partial void OnTONG_GIA_TRIChanging(string value);
    partial void OnTONG_GIA_TRIChanged();
    partial void OnSOLUONGChanging(string value);
    partial void OnSOLUONGChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    partial void OnNGAY_TAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAY_TAOChanged();
    partial void OnDIACHI_GIAOHANGChanging(System.Data.Linq.Binary value);
    partial void OnDIACHI_GIAOHANGChanged();
    partial void OnID_SANPHAMChanging(long value);
    partial void OnID_SANPHAMChanged();
    #endregion
		
		public DatHang()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DONHANG", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID_DONHANG
		{
			get
			{
				return this._ID_DONHANG;
			}
			set
			{
				if ((this._ID_DONHANG != value))
				{
					this.OnID_DONHANGChanging(value);
					this.SendPropertyChanging();
					this._ID_DONHANG = value;
					this.SendPropertyChanged("ID_DONHANG");
					this.OnID_DONHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONG_GIA_TRI", DbType="NVarChar(MAX)")]
		public string TONG_GIA_TRI
		{
			get
			{
				return this._TONG_GIA_TRI;
			}
			set
			{
				if ((this._TONG_GIA_TRI != value))
				{
					this.OnTONG_GIA_TRIChanging(value);
					this.SendPropertyChanging();
					this._TONG_GIA_TRI = value;
					this.SendPropertyChanged("TONG_GIA_TRI");
					this.OnTONG_GIA_TRIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="NVarChar(MAX)")]
		public string SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_TAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAY_TAO
		{
			get
			{
				return this._NGAY_TAO;
			}
			set
			{
				if ((this._NGAY_TAO != value))
				{
					this.OnNGAY_TAOChanging(value);
					this.SendPropertyChanging();
					this._NGAY_TAO = value;
					this.SendPropertyChanged("NGAY_TAO");
					this.OnNGAY_TAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI_GIAOHANG", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DIACHI_GIAOHANG
		{
			get
			{
				return this._DIACHI_GIAOHANG;
			}
			set
			{
				if ((this._DIACHI_GIAOHANG != value))
				{
					this.OnDIACHI_GIAOHANGChanging(value);
					this.SendPropertyChanging();
					this._DIACHI_GIAOHANG = value;
					this.SendPropertyChanged("DIACHI_GIAOHANG");
					this.OnDIACHI_GIAOHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SANPHAM", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID_SANPHAM
		{
			get
			{
				return this._ID_SANPHAM;
			}
			set
			{
				if ((this._ID_SANPHAM != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SANPHAMChanging(value);
					this.SendPropertyChanging();
					this._ID_SANPHAM = value;
					this.SendPropertyChanged("ID_SANPHAM");
					this.OnID_SANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DatHang", Storage="_SanPham", ThisKey="ID_SANPHAM", OtherKey="ID_SANPHAM", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.DatHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.DatHangs.Add(this);
						this._ID_SANPHAM = value.ID_SANPHAM;
					}
					else
					{
						this._ID_SANPHAM = default(long);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_SANPHAM;
		
		private string _TEN_SANPHAM;
		
		private string _GIA;
		
		private string _ANH;
		
		private string _LISANH;
		
		private System.Nullable<bool> _HOT;
		
		private System.Nullable<int> _ID_DANHMUC;
		
		private System.Nullable<int> _ID_THUONGHIEU;
		
		private string _CAUHINH;
		
		private string _MOTASANPHAM;
		
		private EntitySet<DatHang> _DatHangs;
		
		private EntityRef<DanhMuc1> _DanhMuc1;
		
		private EntityRef<ThuongHieu> _ThuongHieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SANPHAMChanging(long value);
    partial void OnID_SANPHAMChanged();
    partial void OnTEN_SANPHAMChanging(string value);
    partial void OnTEN_SANPHAMChanged();
    partial void OnGIAChanging(string value);
    partial void OnGIAChanged();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    partial void OnLISANHChanging(string value);
    partial void OnLISANHChanged();
    partial void OnHOTChanging(System.Nullable<bool> value);
    partial void OnHOTChanged();
    partial void OnID_DANHMUCChanging(System.Nullable<int> value);
    partial void OnID_DANHMUCChanged();
    partial void OnID_THUONGHIEUChanging(System.Nullable<int> value);
    partial void OnID_THUONGHIEUChanged();
    partial void OnCAUHINHChanging(string value);
    partial void OnCAUHINHChanged();
    partial void OnMOTASANPHAMChanging(string value);
    partial void OnMOTASANPHAMChanged();
    #endregion
		
		public SanPham()
		{
			this._DatHangs = new EntitySet<DatHang>(new Action<DatHang>(this.attach_DatHangs), new Action<DatHang>(this.detach_DatHangs));
			this._DanhMuc1 = default(EntityRef<DanhMuc1>);
			this._ThuongHieu = default(EntityRef<ThuongHieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SANPHAM", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID_SANPHAM
		{
			get
			{
				return this._ID_SANPHAM;
			}
			set
			{
				if ((this._ID_SANPHAM != value))
				{
					this.OnID_SANPHAMChanging(value);
					this.SendPropertyChanging();
					this._ID_SANPHAM = value;
					this.SendPropertyChanged("ID_SANPHAM");
					this.OnID_SANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_SANPHAM", DbType="NVarChar(MAX)")]
		public string TEN_SANPHAM
		{
			get
			{
				return this._TEN_SANPHAM;
			}
			set
			{
				if ((this._TEN_SANPHAM != value))
				{
					this.OnTEN_SANPHAMChanging(value);
					this.SendPropertyChanging();
					this._TEN_SANPHAM = value;
					this.SendPropertyChanged("TEN_SANPHAM");
					this.OnTEN_SANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="NVarChar(MAX)")]
		public string GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="NVarChar(MAX)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LISANH", DbType="NVarChar(MAX)")]
		public string LISANH
		{
			get
			{
				return this._LISANH;
			}
			set
			{
				if ((this._LISANH != value))
				{
					this.OnLISANHChanging(value);
					this.SendPropertyChanging();
					this._LISANH = value;
					this.SendPropertyChanged("LISANH");
					this.OnLISANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOT", DbType="Bit")]
		public System.Nullable<bool> HOT
		{
			get
			{
				return this._HOT;
			}
			set
			{
				if ((this._HOT != value))
				{
					this.OnHOTChanging(value);
					this.SendPropertyChanging();
					this._HOT = value;
					this.SendPropertyChanged("HOT");
					this.OnHOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DANHMUC", DbType="Int")]
		public System.Nullable<int> ID_DANHMUC
		{
			get
			{
				return this._ID_DANHMUC;
			}
			set
			{
				if ((this._ID_DANHMUC != value))
				{
					if (this._DanhMuc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DANHMUCChanging(value);
					this.SendPropertyChanging();
					this._ID_DANHMUC = value;
					this.SendPropertyChanged("ID_DANHMUC");
					this.OnID_DANHMUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_THUONGHIEU", DbType="Int")]
		public System.Nullable<int> ID_THUONGHIEU
		{
			get
			{
				return this._ID_THUONGHIEU;
			}
			set
			{
				if ((this._ID_THUONGHIEU != value))
				{
					if (this._ThuongHieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_THUONGHIEUChanging(value);
					this.SendPropertyChanging();
					this._ID_THUONGHIEU = value;
					this.SendPropertyChanged("ID_THUONGHIEU");
					this.OnID_THUONGHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUHINH", DbType="NVarChar(MAX)")]
		public string CAUHINH
		{
			get
			{
				return this._CAUHINH;
			}
			set
			{
				if ((this._CAUHINH != value))
				{
					this.OnCAUHINHChanging(value);
					this.SendPropertyChanging();
					this._CAUHINH = value;
					this.SendPropertyChanged("CAUHINH");
					this.OnCAUHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTASANPHAM", DbType="NVarChar(MAX)")]
		public string MOTASANPHAM
		{
			get
			{
				return this._MOTASANPHAM;
			}
			set
			{
				if ((this._MOTASANPHAM != value))
				{
					this.OnMOTASANPHAMChanging(value);
					this.SendPropertyChanging();
					this._MOTASANPHAM = value;
					this.SendPropertyChanged("MOTASANPHAM");
					this.OnMOTASANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DatHang", Storage="_DatHangs", ThisKey="ID_SANPHAM", OtherKey="ID_SANPHAM")]
		public EntitySet<DatHang> DatHangs
		{
			get
			{
				return this._DatHangs;
			}
			set
			{
				this._DatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc1_SanPham", Storage="_DanhMuc1", ThisKey="ID_DANHMUC", OtherKey="ID_DANHMUC", IsForeignKey=true)]
		public DanhMuc1 DanhMuc1
		{
			get
			{
				return this._DanhMuc1.Entity;
			}
			set
			{
				DanhMuc1 previousValue = this._DanhMuc1.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc1.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._DanhMuc1.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._ID_DANHMUC = value.ID_DANHMUC;
					}
					else
					{
						this._ID_DANHMUC = default(Nullable<int>);
					}
					this.SendPropertyChanged("DanhMuc1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_ThuongHieu", ThisKey="ID_THUONGHIEU", OtherKey="ID_THUONGHIEU", IsForeignKey=true)]
		public ThuongHieu ThuongHieu
		{
			get
			{
				return this._ThuongHieu.Entity;
			}
			set
			{
				ThuongHieu previousValue = this._ThuongHieu.Entity;
				if (((previousValue != value) 
							|| (this._ThuongHieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongHieu.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._ThuongHieu.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._ID_THUONGHIEU = value.ID_THUONGHIEU;
					}
					else
					{
						this._ID_THUONGHIEU = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThuongHieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatHangs(DatHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_DatHangs(DatHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongHieu")]
	public partial class ThuongHieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_THUONGHIEU;
		
		private string _TEN_THUONGHIEU;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_THUONGHIEUChanging(int value);
    partial void OnID_THUONGHIEUChanged();
    partial void OnTEN_THUONGHIEUChanging(string value);
    partial void OnTEN_THUONGHIEUChanged();
    #endregion
		
		public ThuongHieu()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_THUONGHIEU", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_THUONGHIEU
		{
			get
			{
				return this._ID_THUONGHIEU;
			}
			set
			{
				if ((this._ID_THUONGHIEU != value))
				{
					this.OnID_THUONGHIEUChanging(value);
					this.SendPropertyChanging();
					this._ID_THUONGHIEU = value;
					this.SendPropertyChanged("ID_THUONGHIEU");
					this.OnID_THUONGHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_THUONGHIEU", DbType="NVarChar(MAX)")]
		public string TEN_THUONGHIEU
		{
			get
			{
				return this._TEN_THUONGHIEU;
			}
			set
			{
				if ((this._TEN_THUONGHIEU != value))
				{
					this.OnTEN_THUONGHIEUChanging(value);
					this.SendPropertyChanging();
					this._TEN_THUONGHIEU = value;
					this.SendPropertyChanged("TEN_THUONGHIEU");
					this.OnTEN_THUONGHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_SanPhams", ThisKey="ID_THUONGHIEU", OtherKey="ID_THUONGHIEU")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinTuc")]
	public partial class TinTuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID_TINTUC;
		
		private string _TIEUDE;
		
		private string _NOIDUNG;
		
		private string _DUONGDAN_ANH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TINTUCChanging(long value);
    partial void OnID_TINTUCChanged();
    partial void OnTIEUDEChanging(string value);
    partial void OnTIEUDEChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnDUONGDAN_ANHChanging(string value);
    partial void OnDUONGDAN_ANHChanged();
    #endregion
		
		public TinTuc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TINTUC", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID_TINTUC
		{
			get
			{
				return this._ID_TINTUC;
			}
			set
			{
				if ((this._ID_TINTUC != value))
				{
					this.OnID_TINTUCChanging(value);
					this.SendPropertyChanging();
					this._ID_TINTUC = value;
					this.SendPropertyChanged("ID_TINTUC");
					this.OnID_TINTUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEUDE", DbType="NVarChar(MAX)")]
		public string TIEUDE
		{
			get
			{
				return this._TIEUDE;
			}
			set
			{
				if ((this._TIEUDE != value))
				{
					this.OnTIEUDEChanging(value);
					this.SendPropertyChanging();
					this._TIEUDE = value;
					this.SendPropertyChanged("TIEUDE");
					this.OnTIEUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(MAX)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUONGDAN_ANH", DbType="NVarChar(MAX)")]
		public string DUONGDAN_ANH
		{
			get
			{
				return this._DUONGDAN_ANH;
			}
			set
			{
				if ((this._DUONGDAN_ANH != value))
				{
					this.OnDUONGDAN_ANHChanging(value);
					this.SendPropertyChanging();
					this._DUONGDAN_ANH = value;
					this.SendPropertyChanged("DUONGDAN_ANH");
					this.OnDUONGDAN_ANHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
